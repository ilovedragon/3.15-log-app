name: 3.13_ServerlessSecretMgmt
run-name: ${{ github.actor }} is deploying a serverless platform with Secret Management
on: 
  push:
    branches:
      - dev

jobs: 
  predeploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job is automatically triggered by a ${{ github.event_name }} event."

  install-dependencies:
    runs-on: ubuntu-latest
    needs: predeploy
    steps: 
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm ci

  unit-testing:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps: 
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm ci
      - name: Run unit testing command
        run: npm test

  get-secret:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3    
      - name: Read config file
        id: env
        run: |
          branch_name="${{ steps.branch.outputs.branch }}"
          if [[ "$branch_name" == "main" ]]; then
            config_path="env/main.json"
          else
            config_path="env/dev.json"
          fi
          aws_access_key_id=$(jq -r ".${branch_name}.aws-access-key-id" $config_path)
          aws_secret_access_key=$(jq -r ".${branch_name}.aws-secret-access-key" $config_path)
          aws_region=$(jq -r ".${branch_name}.aws-region" $config_path)
          echo "::set-output name=aws_access_key_id::$aws_access_key_id"
          echo "::set-output name=aws_secret_access_key::$aws_secret_access_key"
          echo "::set-output name=aws_region::$aws_region"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ steps.env.outputs.aws_access_key_id }}
          aws-secret-access-key: ${{ steps.env.outputs.aws_secret_access_key }}
          aws-region: ${{ steps.config.outputs.aws_region }}
      - name: aws cli show Secret
        run: |
          aws secretsmanager get-secret-value --secret-id POHLENG-SECRET
      - name: aws cli show SSM
        run: |
          aws ssm get-parameter --name pohleng-parameter

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: get-secret
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy
      env:
        AWS_ACCESS_KEY_ID:  ${{ steps.env.outputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY:  ${{ steps.env.outputs.aws_secret_access_key }}




